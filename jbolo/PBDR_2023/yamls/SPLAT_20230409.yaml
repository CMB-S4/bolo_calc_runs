version: {date: 20230409, name: 'SPLAT'}  
# WARNING:  all numerical values must have a decimal point in them, to be interpreted 
# by python as numbers rather than strings.  This includes values in exponential notation,
# eg use 4.0e-12, not 4e-12.
#
config:
  dnu: 0.01 # GHz frequency resolution for integrals
sources:
  cmb: {source_type: blackbody, T: 2.726, emiss: 1.0}
  atmosphere:
    # This shows how to do it with the bolo-calc hdf5 file.
    source_type: hdf5  #
    file: '../atmos/atm_20201217.hdf5'
    site: 'Pole'
    pwv: 321      # microns, from 0 to 8000
    elevation: 50  # degrees, integer from 1 to 90
optics_defaults: {temperature: 250.0, reflection: 0.0, scatter_frac: 0.0, spillover: 0.0, absorption: 0.0}
optical_elements:
  # requires python 3.7 or later, because we assume dict{} is ordered.
  # This list of elements starts with the one closest to the sky, and moves toward the detector.
  primary:      {obj_type: Mirror, conductivity: 36.9E6, surface_rough: 4.0E-6}  # no spillover b/c no gaps
  secondary:    {obj_type: Mirror, conductivity: 36.9E6, surface_rough: 4.0E-6}
  tertiary:     {obj_type: Mirror, conductivity: 36.9E6, surface_rough: 4.0E-6, spillover: 0.02}
  window:       {obj_type: LossTangent, reflection: 0.01, thickness: 0.00475, index: 1.525, loss_tangent: 3.0E-4}
  RTMLI_10 :    {obj_type: Bespoke,    temperature: 150.0, absorption: [0.00399, 0.00399, 0.00399, 0.00399, 0.00399, 0.00435, 0.0083 ]}  # 10 layers
  alumina_filt: {obj_type: LossTangent, temperature: 50.0, reflection: 0.02, thickness: 0.01, index: 3.1, loss_tangent: 3.0E-4}
  # old, 5mm thick one, nylon_filt:   {obj_type: Bespoke,     temperature:  6.0, reflection: 0.01, absorption: [0.0001, 0.0002, 0.0005, 0.0045, 0.0159, 0.0471, 0.0838]}
  # new, 4mm thick one:
  nylon_filt:   {obj_type: Bespoke,     temperature:  8.0, reflection: 0.01, absorption: [0.0001, 0.0001, 0.0004, 0.0036, 0.0127, 0.0378, 0.0676] }
  Lens_1:    {obj_type: LossTangent, temperature: 4.5,  reflection: 0.006, thickness: 0.01, index: 3.41, loss_tangent: 0.5E-4}
  Lens_2:    {obj_type: LossTangent, temperature: 4.5,  reflection: 0.006, thickness: 0.01, index: 3.41, loss_tangent: 0.5E-4}
  lowpass:      {obj_type: Bespoke,     temperature: 1.0,  absorption: 0.01, reflection: 0.05}
  lyot:         {obj_type: ApertureStop, temperature: 1.1}
  Lens_3:      {obj_type: LossTangent, temperature: 1.5,  reflection: 0.006, thickness: 0.01, index: 3.41, loss_tangent: 0.5E-4}
bolo_config:
  # For aperture stop calcs
  waist_factor: 3.0
  f_number:  2.18 # (avg) Figure 11, "Freeform three-mirror anastigmatic large-aperture telescope and receiver optics for CMB-S4", P. Gallardo etal
  # 3/27/2023 looks more like 2.3 (min 2.24, max 2.36)
  N_polarizations: 1
  #
  AOmega_method: ModeCount   # or "Fixed"
  N_modes: 1  # required if method == "ModeCount"
  #
  psat_method: 'from_optical_power' #or "specified" ; psat = P_optical * psat_factor for "from_optical_power"
  psat_factor: 3.0  # must a number if psat_method is "from_optical_power"
  beta: 2.7   # this is beta = n-1. bolo-calc called it "carrier index". Note that G_dynamic is found from psat, T_c, and carrier_index
  #
  loopgain_method: 'infinite' # will set L=1000
  #loopgain_method: 'from_alpha'  # need to specfiy alpha = dln(R)/dln(T) for each channel separately, in key 'alpha'.
  #loopgain_method: 'specified'  # need to specify for each channel separately, in key 'loopgain'.
  T_bath: 0.1
  T_c: 0.16
  R_bolo: 0.006   # as biased in operation, ie less than R_normal
  yield: 0.8
readout:
  #method: 'fraction'  # uses channels read_frac
  method: 'from_NEI'   # uses channels readout_NEI
channels:
  ULF:
    chnum: 0  # This sets the order of lists in optical elements, must start at zero and increment from there.
    band_center:  20.0  # not used
    nu_low: 17.5        # if a band_response file is given, these set the low and high limits of integration.
    nu_high: 22.5
    #read_frac: 0.05
    readout_NEI: 45.0e-12 # A/rtHz
    band_response : {method: flat}
    #band_response : {method: bandfile, fname : myband.txt }
    det_eff: 0.65
    #psat: 0.40e-12  # see psat_method above.
    horn_diameter: 20.95e-3   # meters
    pixel_spacing: 21.1e-3
    num_det_per_wafer: 54
  LF_1:
    chnum: 1  # This sets the order of lists in optical elements, must start at zero and increment from there.
    band_center:  24.75  # not used
    nu_low: 21.50        # if a band_response file is given, these set the low and high limits of integration.
    nu_high: 28.00
    #read_frac: 0.05
    readout_NEI: 45.0e-12 # A/rtHz
    band_response : {method: flat}
    #band_response : {method: bandfile, fname : myband.txt }
    det_eff: 0.65
    #psat: 0.75e-12  # see psat_method above.
    horn_diameter: 15.95e-3   # meters
    pixel_spacing: 16.1e-3
    num_det_per_wafer: 96
  LF_2:
    chnum: 2  # This sets the order of lists in optical elements, must start at zero and increment from there.
    band_center:  36.5  # not used
    nu_low: 28.0        # if a band_response file is given, these set the low and high limits of integration.
    nu_high: 45.0
    #read_frac: 0.05
    readout_NEI: 45.0e-12 # A/rtHz
    band_response : {method: flat}
    #band_response : {method: bandfile, fname : myband.txt }
    det_eff: 0.65
    #psat: 4.18e-12  # see psat_method above.
    horn_diameter: 15.95e-3   # meters
    pixel_spacing: 16.1e-3
    num_det_per_wafer: 96
  MF_1:
    chnum: 3  # This sets the order of lists in optical elements, must start at zero and increment from there.
    band_center:  91.5  # not used
    nu_low: 77.0        # if a band_response file is given, these set the low and high limits of integration.
    nu_high: 106.0
    read_frac: 0.05
    readout_NEI: 45.0e-12 # A/rtHz
    band_response : {method: flat}
    #band_response : {method: bandfile, fname : myband.txt }
    det_eff: 0.65
    #psat: 4.60e-12  # see psat_method above.
    horn_diameter: 5.15e-3   # meters
    pixel_spacing: 5.3e-3
    num_det_per_wafer: 860  # 2 pixels lost to pins
  MF_2:
    chnum: 4  # This sets the order of lists in optical elements, must start at zero and increment from there.
    band_center:  148.5  # not used
    nu_low: 128.0        # if a band_response file is given, these set the low and high limits of integration.
    nu_high: 169.0
    #read_frac: 0.05
    readout_NEI: 45.0e-12 # A/rtHz
    band_response : {method: flat}
    #band_response : {method: bandfile, fname : myband.txt }
    det_eff: 0.65
    #psat: 12.51e-12  # see psat_method above.
    horn_diameter: 5.15e-3   # meters
    pixel_spacing: 5.3e-3
    num_det_per_wafer: 860   # 2 pixels lost to pins
  HF_1:
    chnum: 5  # This sets the order of lists in optical elements, must start at zero and increment from there.
    band_center:  227.0  # not used
    nu_low: 198.0        # if a band_response file is given, these set the low and high limits of integration.
    nu_high: 256.0
    #read_frac: 0.05
    readout_NEI: 45.0e-12 # A/rtHz
    band_response : {method: flat}
    #band_response : {method: bandfile, fname : myband.txt }
    det_eff: 0.65
    #psat: 31.70e-12  # see psat_method above.
    horn_diameter: 5.05e-3   # meters
    pixel_spacing: 5.2e-3
    num_det_per_wafer: 934   # 2 pixels lost to pins
  HF_2:
    chnum: 6  # This sets the order of lists in optical elements, must start at zero and increment from there.
    band_center:  285.5  # not used
    nu_low: 256.0       # if a band_response file is given, these set the low and high limits of integration.
    nu_high: 315.0
    #read_frac: 0.05
    readout_NEI: 45.0e-12 # A/rtHz
    band_response : {method: flat}
    #band_response : {method: bandfile, fname : myband.txt }
    det_eff: 0.65
    #psat: 42.43e-12  # see psat_method above.
    horn_diameter: 5.05e-3   # meters
    pixel_spacing: 5.2e-3
    num_det_per_wafer: 934   # 2 pixels lost to pins
